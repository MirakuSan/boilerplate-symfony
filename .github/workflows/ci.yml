name: ðŸš€ CI boilerplate Symfony ðŸš€

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~
  
permissions:
  pull-requests: write
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-project:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      -
        name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-interaction
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v4
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build
      -
        name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost
      -
        name: Check HTTPS reachability
        if: false # Remove this line when the homepage will be configured, or change the path to check
        run: curl -vk --fail-with-body https://localhost
      -
        name: Create test database
        if: false # Remove this line if Doctrine ORM is installed
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      -
        name: Run migrations
        if: false # Remove this line if Doctrine Migrations is installed
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
        name: Run PHPUnit
        if: false # Remove this line if PHPUnit is installed
        run: docker compose exec -T php bin/phpunit
      -
        name: Doctrine Schema Validator
        if: false # Remove this line if Doctrine ORM is installed
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
        
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0

  security-check:
    name: Symfony Security Check
    runs-on: ubuntu-22.04
    needs: build-project
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start services
        run: docker compose up -d

      - name: Run Symfony Security Checker
        run: docker compose exec -T php bin/console security:check

      - name: Clean up
        run: docker compose down --remove-orphans

  dependabot:
    name: Dependabot auto-merge
    runs-on: ubuntu-latest
    needs: [ build-project, lint ]
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      -
        name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
      -
        name: Install GitHub CLI
        uses: actions/setup-gh-cli@v3
      -
        name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
        run: gh pr merge --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
