name: ðŸš€ CI boilerplate Symfony ðŸš€

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

permissions:
  pull-requests: write
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-project:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create compose.override.yaml
        run: cp compose.override.yaml.dist compose.override.yaml
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker images
        uses: docker/bake-action@v4
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max

      - name: Start services
        run: docker compose up --wait --no-build

      - name: Wait for PHP container
        run: |
          echo "Waiting for PHP container to be ready..."
          until docker compose exec php true; do
            sleep 1
          done

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Validate composer.json and composer.lock
        run: composer validate --strict
        
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: make composer c='install --prefer-dist --no-progress'
        
      - name: Add localhost to /etc/hosts
        run: echo "127.0.0.1 localhost" | sudo tee -a /etc/hosts

      - name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost

      - name: Check HTTPS reachability
        run: curl -vk --fail-with-body https://localhost

      - name: Create test database
        if: false # Remove this line if Doctrine ORM is installed
        run: make db-create

      - name: Run migrations
        if: false # Remove this line if Doctrine Migrations is installed
        run: make db-update

      - name: Run PHPUnit
        if: false # Remove this line if PHPUnit is installed
        run: make test

      - name: Doctrine Schema Validator
        if: false # Remove this line if Doctrine ORM is installed
        run: make sf c=doctrine:schema:validate

      - name: Clean up
        run: make kill down

  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0

  security-check:
    name: Symfony Security Check
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      -  name: Setup PHP with PECL extension
         uses: shivammathur/setup-php@v2
         with:
           php-version: '8.3'

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --ansi

      - name: Run Symfony Security Checker
        run: composer audit --no-dev --format summary --locked --ansi

      - name: Run Composer Outdated
        run: composer outdated -D --strict --ignore=phpunit/phpunit --ansi

  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: security-check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --ansi

      - name: Run PhpCsFixer
        run: vendor/bin/php-cs-fixer fix --using-cache=no --verbose --diff --dry-run --ansi

      - name: Run PhpStan
        run: vendor/bin/phpstan analyse --memory-limit=-1 --ansi

      - name: Run Psalm
        run: vendor/bin/psalm --show-info=true

      - name: Run PhpArkitect
        run: vendor/bin/phparkitect check --config=phparkitect.php --ansi

  dependabot:
    name: Dependabot auto-merge
    runs-on: ubuntu-latest
    needs: [ build-project, lint, security-check, quality ]
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2

      - name: Install GitHub CLI
        uses: ksivamuthu/actions-setup-gh-cli@v3

      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
        run: gh pr merge --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
